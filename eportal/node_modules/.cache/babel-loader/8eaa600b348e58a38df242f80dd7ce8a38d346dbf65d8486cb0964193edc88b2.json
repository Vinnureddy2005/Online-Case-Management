{"ast":null,"code":"var _jsxFileName = \"/Users/vinnu/Desktop/Nyaaya/NYAAYA/eportal/src/pages/Administrator/Uploaddocs.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Filetable from '../../Components/Filetable';\nimport \"./Uploaddocs.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Uploaddocs = () => {\n  _s();\n  const [formVisible, setFormVisible] = useState(false);\n  const [files, setFiles] = useState([]);\n  const [selectedFileType, setSelectedFileType] = useState(\"\");\n  const [cnr, setCnr] = useState('');\n  useEffect(() => {\n    const fetchFiles = async () => {\n      try {\n        const cnrCheck = await fetch(`http://localhost:3001/checkCNR?cnr=${cnr}`);\n        const cnrExists = await cnrCheck.json();\n        if (cnrExists) {\n          const response = await fetch(`http://localhost:3001/files?cnr=${cnr}`);\n          const filesData = await response.json();\n          setFiles(filesData);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchFiles();\n  }, [cnr]);\n  const toggleForm = () => {\n    setFormVisible(!formVisible);\n  };\n  const handleFileTypeChange = event => {\n    setSelectedFileType(event.target.value);\n  };\n  const submitForm = async () => {\n    const fileName = document.getElementById(\"fileName\").value;\n    const cnrValue = document.getElementById(\"cnr\").value;\n    const fileUpload = document.getElementById(\"fileUpload\");\n\n    // Update the cnr state with the entered CNR value\n    setCnr(cnrValue);\n    if (fileName && fileUpload.files.length > 0) {\n      const fileSizeLimit = 5 * 1024 * 1024;\n      if (fileUpload.files[0].size > fileSizeLimit) {\n        alert('File size exceeds the limit (5 MB). Please choose a smaller file.');\n        return;\n      }\n      const formData = new FormData();\n      formData.append('fileName', fileName);\n      formData.append('cnr', cnrValue);\n      formData.append('fileType', selectedFileType);\n      //formData.append('fileUpload', fileUpload.files[0]);\n      for (let i = 0; i < fileUpload.files.length; i++) {\n        formData.append('fileUpload', fileUpload.files[i]);\n      }\n      try {\n        const response = await fetch('http://localhost:3001/upload', {\n          method: 'POST',\n          body: formData\n        });\n        if (response.ok) {\n          const filesResponse = await fetch(`http://localhost:3001/files?cnr=${cnrValue}`);\n          const filesData = await filesResponse.json();\n          setFiles(filesData);\n        } else {\n          const errorMessage = await response.json();\n          if (errorMessage.error === 'Invalid CNR') {\n            alert('Please enter a valid CNR.');\n          } else {\n            alert('Upload failed. Please enter all the fields.');\n          }\n        }\n      } catch (error) {\n        console.error(error);\n        alert('Upload failed ');\n      }\n      document.getElementById(\"fileName\").value = \"\";\n      fileUpload.value = \"\";\n    } else {\n      alert(\"Please provide a file name and choose at least one file.\");\n    }\n  };\n  const viewFile = async filename => {\n    try {\n      const response = await fetch(`http://localhost:3001/files/${encodeURIComponent(filename)}`);\n      if (response.ok) {\n        const fileContentBase64 = await response.text();\n\n        // Determine the file type based on filename extension\n        const fileType = filename.split('.').pop().toLowerCase();\n        if (fileType === 'jpg' || fileType === 'jpeg' || fileType === 'png' || fileType === 'gif') {\n          // Display the image using a data URL\n          const imageSrc = `data:image/${fileType};base64,${fileContentBase64}`;\n\n          // Open a new window and display the image\n          const newTab = window.open();\n          newTab.document.write(`\n            <!DOCTYPE html>\n            <html>\n              <head>\n                <title>${filename}</title>\n              </head>\n              <body>\n              <image width=\"1500\" height=\"700\" controls>\n                <img src=\"${imageSrc}\" alt=\"${filename}\" />\n                </image>\n              </body>\n            </html>\n          `);\n        } else if (fileType === 'mp4' || fileType === 'webm' || fileType === 'ogg') {\n          const videoSrc = `data:video/${fileType};base64,${fileContentBase64}`;\n          const newTab = window.open();\n          newTab.document.write(`\n            <!DOCTYPE html>\n            <html>\n              <head>\n                <title>${filename}</title>\n              </head>\n              <body>\n                <video width=\"1500\" height=\"700\" controls>\n                  <source src=\"${videoSrc}\" type=\"video/${fileType}\">\n                  Your browser does not support the video tag.\n                </video>\n              </body>\n            </html>\n          `);\n        } else if (fileType === 'pdf') {\n          const pdfSrc = `data:application/pdf;base64,${fileContentBase64}`;\n          const newTab = window.open();\n          newTab.document.write(`\n            <!DOCTYPE html>\n            <html>\n              <head>\n                <title>${filename}</title>\n              </head>\n              <body>\n                <embed src=\"${pdfSrc}\" type=\"application/pdf\" width=\"100%\" height=\"700px\">\n              </body>\n            </html>\n          `);\n        } else if (fileType === 'mp3') {\n          const audioSrc = `data:audio/mpeg;base64,${fileContentBase64}`;\n          const newTab = window.open();\n          newTab.document.write(`\n            <!DOCTYPE html>\n            <html>\n              <head>\n                <title>${filename}</title>\n                <style>\n          body {\n            display: flex;align-items: center;justify-content: center;height: 100vh;\n          }\n        </style>\n              </head>\n              <body>\n                <audio controls>\n                  <source src=\"${audioSrc}\" type=\"audio/mpeg\">\n                  Your browser does not support the audio tag.\n                </audio>\n              </body>\n            </html>\n          `);\n        } else if (fileType === 'txt') {\n          const decodedContent = atob(fileContentBase64);\n          const newTab = window.open();\n          newTab.document.write(`\n            <!DOCTYPE html>\n            <html>\n              <head>\n                <title>${filename}</title>\n              </head>\n              <body>\n                <pre>${decodedContent}</pre>\n              </body>\n            </html>\n          `);\n        } else {\n          console.error('Unsupported file type:', fileType);\n          alert('Unsupported file type');\n        }\n      } else {\n        console.error('Error fetching file content:', response.status);\n        alert('Error fetching file content');\n      }\n    } catch (error) {\n      console.error(error);\n      alert('Error fetching file content');\n    }\n  };\n  const fileType = [\"Select\", \"text\", \"pdf\", \"image\", \" video\", \"audio\"];\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"title\",\n        children: \"Upload Case Documents\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"red\",\n          marginTop: \"-50px\",\n          marginLeft: \"750px\"\n        },\n        children: \" Note:Click on below upload button to upload files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"uploadbtn\",\n        onClick: toggleForm,\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this), formVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"uploadForm\",\n        action: \"/upload\",\n        method: \"post\",\n        encType: \"multipart/form-data\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"data\",\n                  htmlFor: \"cnr\",\n                  children: /*#__PURE__*/_jsxDEV(\"b\", {\n                    children: \"CNR Number:\\xA0\\xA0\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 231,\n                    columnNumber: 55\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"\",\n                  id: \"cnr\",\n                  name: \"cnr\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"data\",\n                  htmlFor: \"fileName\",\n                  children: /*#__PURE__*/_jsxDEV(\"b\", {\n                    children: \"File Name:\\xA0\\xA0\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 233,\n                    columnNumber: 62\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  id: \"fileName\",\n                  name: \"fileName\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"data\",\n                  htmlFor: \"fileType\",\n                  children: /*#__PURE__*/_jsxDEV(\"b\", {\n                    children: \"File Type:\\xA0\\xA0\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 236,\n                    columnNumber: 62\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  id: \"fileType\",\n                  name: \"fileType\",\n                  required: true,\n                  value: selectedFileType,\n                  onChange: handleFileTypeChange,\n                  children: fileType.map((type, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: type,\n                    children: type\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 239,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 237,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"data\",\n                  htmlFor: \"fileUpload\",\n                  children: /*#__PURE__*/_jsxDEV(\"b\", {\n                    children: \"Choose File:\\xA0\\xA0\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 244,\n                    columnNumber: 65\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"file\",\n                  id: \"fileUpload\",\n                  name: \"fileUpload\",\n                  accept: \".txt, .pdf, image/*, video/*, .jpg, .jpeg, .png, .gif,.mp3 \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    marginLeft: \"19rem\",\n                    marginTop: \"10px\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"b\", {\n                    children: \"File size should be less than 5 MB.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 246,\n                    columnNumber: 68\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"uploadbtn\",\n                  type: \"button\",\n                  onClick: submitForm,\n                  children: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Filetable, {\n        files: files,\n        onViewFile: viewFile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 212,\n    columnNumber: 5\n  }, this);\n};\n_s(Uploaddocs, \"n310ReBFJiKnSQBxi8paFzMw3lk=\");\n_c = Uploaddocs;\nexport default Uploaddocs;\nvar _c;\n$RefreshReg$(_c, \"Uploaddocs\");","map":{"version":3,"names":["React","useEffect","useState","Filetable","jsxDEV","_jsxDEV","Uploaddocs","_s","formVisible","setFormVisible","files","setFiles","selectedFileType","setSelectedFileType","cnr","setCnr","fetchFiles","cnrCheck","fetch","cnrExists","json","response","filesData","error","console","toggleForm","handleFileTypeChange","event","target","value","submitForm","fileName","document","getElementById","cnrValue","fileUpload","length","fileSizeLimit","size","alert","formData","FormData","append","i","method","body","ok","filesResponse","errorMessage","viewFile","filename","encodeURIComponent","fileContentBase64","text","fileType","split","pop","toLowerCase","imageSrc","newTab","window","open","write","videoSrc","pdfSrc","audioSrc","decodedContent","atob","status","children","className","_jsxFileName","lineNumber","columnNumber","style","color","marginTop","marginLeft","onClick","id","action","encType","htmlFor","type","name","required","onChange","map","index","accept","onViewFile","_c","$RefreshReg$"],"sources":["/Users/vinnu/Desktop/Nyaaya/NYAAYA/eportal/src/pages/Administrator/Uploaddocs.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Filetable from '../../Components/Filetable';\nimport \"./Uploaddocs.css\";\n\nconst Uploaddocs = () => {\n  const [formVisible, setFormVisible] = useState(false);\n  const [files, setFiles] = useState([]);\n  const [selectedFileType, setSelectedFileType] = useState(\"\");\n  const [cnr, setCnr] = useState(''); \n\n  useEffect(() => {\n  const fetchFiles = async () => {\n    try {\n      const cnrCheck = await fetch(`http://localhost:3001/checkCNR?cnr=${cnr}`);\n      const cnrExists = await cnrCheck.json();\n      if(cnrExists){\n      const response = await fetch(`http://localhost:3001/files?cnr=${cnr}`);\n      const filesData = await response.json();\n      setFiles(filesData);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  fetchFiles();\n}, [cnr]);\n\n  const toggleForm = () => {\n    setFormVisible(!formVisible);\n  };\n  const handleFileTypeChange = (event) => {\n    setSelectedFileType(event.target.value);\n  };\n  \n  const submitForm = async () => {\n    const fileName = document.getElementById(\"fileName\").value;\n    const cnrValue = document.getElementById(\"cnr\").value;\n    const fileUpload = document.getElementById(\"fileUpload\");\n  \n    // Update the cnr state with the entered CNR value\n    setCnr(cnrValue);\n   \n    if (fileName && fileUpload.files.length > 0) {\n      const fileSizeLimit = 5* 1024 * 1024;\n      if (fileUpload.files[0].size > fileSizeLimit) {\n        alert('File size exceeds the limit (5 MB). Please choose a smaller file.');\n        return;}\n      \n      const formData = new FormData();\n      formData.append('fileName', fileName);\n      formData.append('cnr', cnrValue);\n      formData.append('fileType', selectedFileType);\n      //formData.append('fileUpload', fileUpload.files[0]);\n      for (let i = 0; i < fileUpload.files.length; i++) {\n        formData.append('fileUpload', fileUpload.files[i]);\n      }\n  \n      try {\n        const response = await fetch('http://localhost:3001/upload', {\n          method: 'POST',\n          body: formData,\n        });\n  \n        if (response.ok) {\n          const filesResponse = await fetch(`http://localhost:3001/files?cnr=${cnrValue}`);\n          const filesData = await filesResponse.json();\n          setFiles(filesData);\n        } else {\n          \n          const errorMessage = await response.json();\n          if (errorMessage.error === 'Invalid CNR') {\n            alert('Please enter a valid CNR.');\n          } else {\n            alert('Upload failed. Please enter all the fields.');\n          }\n        }\n      } catch (error) {\n        console.error(error);\n        alert('Upload failed ');\n      }\n  \n      document.getElementById(\"fileName\").value = \"\";\n      fileUpload.value = \"\";\n    } else {\n      alert(\"Please provide a file name and choose at least one file.\");\n    }\n  };\n  \n  const viewFile = async (filename) => {\n    try {\n      const response = await fetch(`http://localhost:3001/files/${encodeURIComponent(filename)}`);\n      if (response.ok) {\n        const fileContentBase64 = await response.text();\n  \n        // Determine the file type based on filename extension\n        const fileType = filename.split('.').pop().toLowerCase();\n  \n        if (fileType === 'jpg' || fileType === 'jpeg' || fileType === 'png' || fileType === 'gif') {\n          // Display the image using a data URL\n          const imageSrc = `data:image/${fileType};base64,${fileContentBase64}`;\n  \n          // Open a new window and display the image\n          const newTab = window.open();\n          newTab.document.write(`\n            <!DOCTYPE html>\n            <html>\n              <head>\n                <title>${filename}</title>\n              </head>\n              <body>\n              <image width=\"1500\" height=\"700\" controls>\n                <img src=\"${imageSrc}\" alt=\"${filename}\" />\n                </image>\n              </body>\n            </html>\n          `);\n        } else if (fileType === 'mp4' || fileType === 'webm' || fileType === 'ogg') {\n          \n          const videoSrc = `data:video/${fileType};base64,${fileContentBase64}`;\n  \n          \n          const newTab = window.open();\n          newTab.document.write(`\n            <!DOCTYPE html>\n            <html>\n              <head>\n                <title>${filename}</title>\n              </head>\n              <body>\n                <video width=\"1500\" height=\"700\" controls>\n                  <source src=\"${videoSrc}\" type=\"video/${fileType}\">\n                  Your browser does not support the video tag.\n                </video>\n              </body>\n            </html>\n          `);\n        } else if (fileType === 'pdf') {\n         \n          const pdfSrc = `data:application/pdf;base64,${fileContentBase64}`;\n  \n   \n          const newTab = window.open();\n          newTab.document.write(`\n            <!DOCTYPE html>\n            <html>\n              <head>\n                <title>${filename}</title>\n              </head>\n              <body>\n                <embed src=\"${pdfSrc}\" type=\"application/pdf\" width=\"100%\" height=\"700px\">\n              </body>\n            </html>\n          `);\n\n        } \n        else if (fileType === 'mp3') {\n          \n          const audioSrc = `data:audio/mpeg;base64,${fileContentBase64}`;\n  \n          const newTab = window.open();\n          newTab.document.write(`\n            <!DOCTYPE html>\n            <html>\n              <head>\n                <title>${filename}</title>\n                <style>\n          body {\n            display: flex;align-items: center;justify-content: center;height: 100vh;\n          }\n        </style>\n              </head>\n              <body>\n                <audio controls>\n                  <source src=\"${audioSrc}\" type=\"audio/mpeg\">\n                  Your browser does not support the audio tag.\n                </audio>\n              </body>\n            </html>\n          `);\n  \n        } else if (fileType === 'txt') {\n    \n          const decodedContent = atob(fileContentBase64);\n          const newTab = window.open();\n          newTab.document.write(`\n            <!DOCTYPE html>\n            <html>\n              <head>\n                <title>${filename}</title>\n              </head>\n              <body>\n                <pre>${decodedContent}</pre>\n              </body>\n            </html>\n          `);\n        } else {\n          console.error('Unsupported file type:', fileType);\n          alert('Unsupported file type');\n        }\n      } else {\n        console.error('Error fetching file content:', response.status);\n        alert('Error fetching file content');\n      }\n    } catch (error) {\n      console.error(error);\n      alert('Error fetching file content');\n    }\n  };\n  const fileType = [\"Select\",\"text\", \"pdf\", \"image\",\" video\",\"audio\"];\n  return (\n    <section>\n      <div>\n        <h2 className='title'>Upload Case Documents</h2>\n        <p style={{color:\"red\" , marginTop:\"-50px\", marginLeft:\"750px\"}}> Note:Click on below upload button to upload files</p>\n        <br />\n       \n        <button className='uploadbtn' onClick={toggleForm}>Upload</button>\n        <br />\n        <br />\n      </div>\n\n      {formVisible && (\n        <div>\n          <form id=\"uploadForm\" action=\"/upload\" method=\"post\" encType=\"multipart/form-data\">\n          \n            <table>\n            <tbody>\n              <tr>\n                <td>\n                <label className=\"data\" htmlFor=\"cnr\"><b>CNR Number:&nbsp;&nbsp;</b></label>\n                  <input type=\"\" id=\"cnr\" name=\"cnr\" required/>\n                  <label className=\"data\" htmlFor=\"fileName\"><b>File Name:&nbsp;&nbsp;</b></label>\n                  <input type=\"text\" id=\"fileName\" name=\"fileName\" required/>\n                  <br/>\n                  <label className=\"data\" htmlFor=\"fileType\"><b>File Type:&nbsp;&nbsp;</b></label>\n                  <select id=\"fileType\" name=\"fileType\" required value={selectedFileType}  onChange={handleFileTypeChange}>\n                      {fileType.map((type, index) => (\n                      <option key={index} value={type}>\n                      {type}\n                      </option>))}\n                  </select>\n\n                  <label  className=\"data\" htmlFor=\"fileUpload\"><b>Choose File:&nbsp;&nbsp;</b></label>\n                  <input  type=\"file\" id=\"fileUpload\" name=\"fileUpload\" accept=\".txt, .pdf, image/*, video/*, .jpg, .jpeg, .png, .gif,.mp3 \"/>\n                  <p style={{marginLeft:\"19rem\",marginTop:\"10px\"}}><b>File size should be less than 5 MB.</b></p>\n                  <button className='uploadbtn' type=\"button\" onClick={submitForm}>Submit</button>\n                  <br/>\n                  <br/>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n          </form>\n        </div>\n      )}\n\n      <div>\n        \n        <Filetable files={files} onViewFile={viewFile} />\n      </div>\n      \n    </section>\n  );\n}\n\nexport default Uploaddocs;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,4BAA4B;AAClD,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACY,GAAG,EAAEC,MAAM,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAElCD,SAAS,CAAC,MAAM;IAChB,MAAMe,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,sCAAqCJ,GAAI,EAAC,CAAC;QACzE,MAAMK,SAAS,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QACvC,IAAGD,SAAS,EAAC;UACb,MAAME,QAAQ,GAAG,MAAMH,KAAK,CAAE,mCAAkCJ,GAAI,EAAC,CAAC;UACtE,MAAMQ,SAAS,GAAG,MAAMD,QAAQ,CAACD,IAAI,CAAC,CAAC;UACvCT,QAAQ,CAACW,SAAS,CAAC;QACnB;MACF,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IAEDP,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACF,GAAG,CAAC,CAAC;EAEP,MAAMW,UAAU,GAAGA,CAAA,KAAM;IACvBhB,cAAc,CAAC,CAACD,WAAW,CAAC;EAC9B,CAAC;EACD,MAAMkB,oBAAoB,GAAIC,KAAK,IAAK;IACtCd,mBAAmB,CAACc,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACzC,CAAC;EAED,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,MAAMC,QAAQ,GAAGC,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC,CAACJ,KAAK;IAC1D,MAAMK,QAAQ,GAAGF,QAAQ,CAACC,cAAc,CAAC,KAAK,CAAC,CAACJ,KAAK;IACrD,MAAMM,UAAU,GAAGH,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAC;;IAExD;IACAlB,MAAM,CAACmB,QAAQ,CAAC;IAEhB,IAAIH,QAAQ,IAAII,UAAU,CAACzB,KAAK,CAAC0B,MAAM,GAAG,CAAC,EAAE;MAC3C,MAAMC,aAAa,GAAG,CAAC,GAAE,IAAI,GAAG,IAAI;MACpC,IAAIF,UAAU,CAACzB,KAAK,CAAC,CAAC,CAAC,CAAC4B,IAAI,GAAGD,aAAa,EAAE;QAC5CE,KAAK,CAAC,mEAAmE,CAAC;QAC1E;MAAO;MAET,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEX,QAAQ,CAAC;MACrCS,QAAQ,CAACE,MAAM,CAAC,KAAK,EAAER,QAAQ,CAAC;MAChCM,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAE9B,gBAAgB,CAAC;MAC7C;MACA,KAAK,IAAI+B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGR,UAAU,CAACzB,KAAK,CAAC0B,MAAM,EAAEO,CAAC,EAAE,EAAE;QAChDH,QAAQ,CAACE,MAAM,CAAC,YAAY,EAAEP,UAAU,CAACzB,KAAK,CAACiC,CAAC,CAAC,CAAC;MACpD;MAEA,IAAI;QACF,MAAMtB,QAAQ,GAAG,MAAMH,KAAK,CAAC,8BAA8B,EAAE;UAC3D0B,MAAM,EAAE,MAAM;UACdC,IAAI,EAAEL;QACR,CAAC,CAAC;QAEF,IAAInB,QAAQ,CAACyB,EAAE,EAAE;UACf,MAAMC,aAAa,GAAG,MAAM7B,KAAK,CAAE,mCAAkCgB,QAAS,EAAC,CAAC;UAChF,MAAMZ,SAAS,GAAG,MAAMyB,aAAa,CAAC3B,IAAI,CAAC,CAAC;UAC5CT,QAAQ,CAACW,SAAS,CAAC;QACrB,CAAC,MAAM;UAEL,MAAM0B,YAAY,GAAG,MAAM3B,QAAQ,CAACD,IAAI,CAAC,CAAC;UAC1C,IAAI4B,YAAY,CAACzB,KAAK,KAAK,aAAa,EAAE;YACxCgB,KAAK,CAAC,2BAA2B,CAAC;UACpC,CAAC,MAAM;YACLA,KAAK,CAAC,6CAA6C,CAAC;UACtD;QACF;MACF,CAAC,CAAC,OAAOhB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;QACpBgB,KAAK,CAAC,gBAAgB,CAAC;MACzB;MAEAP,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC,CAACJ,KAAK,GAAG,EAAE;MAC9CM,UAAU,CAACN,KAAK,GAAG,EAAE;IACvB,CAAC,MAAM;MACLU,KAAK,CAAC,0DAA0D,CAAC;IACnE;EACF,CAAC;EAED,MAAMU,QAAQ,GAAG,MAAOC,QAAQ,IAAK;IACnC,IAAI;MACF,MAAM7B,QAAQ,GAAG,MAAMH,KAAK,CAAE,+BAA8BiC,kBAAkB,CAACD,QAAQ,CAAE,EAAC,CAAC;MAC3F,IAAI7B,QAAQ,CAACyB,EAAE,EAAE;QACf,MAAMM,iBAAiB,GAAG,MAAM/B,QAAQ,CAACgC,IAAI,CAAC,CAAC;;QAE/C;QACA,MAAMC,QAAQ,GAAGJ,QAAQ,CAACK,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;QAExD,IAAIH,QAAQ,KAAK,KAAK,IAAIA,QAAQ,KAAK,MAAM,IAAIA,QAAQ,KAAK,KAAK,IAAIA,QAAQ,KAAK,KAAK,EAAE;UACzF;UACA,MAAMI,QAAQ,GAAI,cAAaJ,QAAS,WAAUF,iBAAkB,EAAC;;UAErE;UACA,MAAMO,MAAM,GAAGC,MAAM,CAACC,IAAI,CAAC,CAAC;UAC5BF,MAAM,CAAC3B,QAAQ,CAAC8B,KAAK,CAAE;AACjC;AACA;AACA;AACA,yBAAyBZ,QAAS;AAClC;AACA;AACA;AACA,4BAA4BQ,QAAS,UAASR,QAAS;AACvD;AACA;AACA;AACA,WAAW,CAAC;QACJ,CAAC,MAAM,IAAII,QAAQ,KAAK,KAAK,IAAIA,QAAQ,KAAK,MAAM,IAAIA,QAAQ,KAAK,KAAK,EAAE;UAE1E,MAAMS,QAAQ,GAAI,cAAaT,QAAS,WAAUF,iBAAkB,EAAC;UAGrE,MAAMO,MAAM,GAAGC,MAAM,CAACC,IAAI,CAAC,CAAC;UAC5BF,MAAM,CAAC3B,QAAQ,CAAC8B,KAAK,CAAE;AACjC;AACA;AACA;AACA,yBAAyBZ,QAAS;AAClC;AACA;AACA;AACA,iCAAiCa,QAAS,iBAAgBT,QAAS;AACnE;AACA;AACA;AACA;AACA,WAAW,CAAC;QACJ,CAAC,MAAM,IAAIA,QAAQ,KAAK,KAAK,EAAE;UAE7B,MAAMU,MAAM,GAAI,+BAA8BZ,iBAAkB,EAAC;UAGjE,MAAMO,MAAM,GAAGC,MAAM,CAACC,IAAI,CAAC,CAAC;UAC5BF,MAAM,CAAC3B,QAAQ,CAAC8B,KAAK,CAAE;AACjC;AACA;AACA;AACA,yBAAyBZ,QAAS;AAClC;AACA;AACA,8BAA8Bc,MAAO;AACrC;AACA;AACA,WAAW,CAAC;QAEJ,CAAC,MACI,IAAIV,QAAQ,KAAK,KAAK,EAAE;UAE3B,MAAMW,QAAQ,GAAI,0BAAyBb,iBAAkB,EAAC;UAE9D,MAAMO,MAAM,GAAGC,MAAM,CAACC,IAAI,CAAC,CAAC;UAC5BF,MAAM,CAAC3B,QAAQ,CAAC8B,KAAK,CAAE;AACjC;AACA;AACA;AACA,yBAAyBZ,QAAS;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiCe,QAAS;AAC1C;AACA;AACA;AACA;AACA,WAAW,CAAC;QAEJ,CAAC,MAAM,IAAIX,QAAQ,KAAK,KAAK,EAAE;UAE7B,MAAMY,cAAc,GAAGC,IAAI,CAACf,iBAAiB,CAAC;UAC9C,MAAMO,MAAM,GAAGC,MAAM,CAACC,IAAI,CAAC,CAAC;UAC5BF,MAAM,CAAC3B,QAAQ,CAAC8B,KAAK,CAAE;AACjC;AACA;AACA;AACA,yBAAyBZ,QAAS;AAClC;AACA;AACA,uBAAuBgB,cAAe;AACtC;AACA;AACA,WAAW,CAAC;QACJ,CAAC,MAAM;UACL1C,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAE+B,QAAQ,CAAC;UACjDf,KAAK,CAAC,uBAAuB,CAAC;QAChC;MACF,CAAC,MAAM;QACLf,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEF,QAAQ,CAAC+C,MAAM,CAAC;QAC9D7B,KAAK,CAAC,6BAA6B,CAAC;MACtC;IACF,CAAC,CAAC,OAAOhB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACpBgB,KAAK,CAAC,6BAA6B,CAAC;IACtC;EACF,CAAC;EACD,MAAMe,QAAQ,GAAG,CAAC,QAAQ,EAAC,MAAM,EAAE,KAAK,EAAE,OAAO,EAAC,QAAQ,EAAC,OAAO,CAAC;EACnE,oBACEjD,OAAA;IAAAgE,QAAA,gBACEhE,OAAA;MAAAgE,QAAA,gBACEhE,OAAA;QAAIiE,SAAS,EAAC,OAAO;QAAAD,QAAA,EAAC;MAAqB;QAAAtC,QAAA,EAAAwC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChDpE,OAAA;QAAGqE,KAAK,EAAE;UAACC,KAAK,EAAC,KAAK;UAAGC,SAAS,EAAC,OAAO;UAAEC,UAAU,EAAC;QAAO,CAAE;QAAAR,QAAA,EAAC;MAAkD;QAAAtC,QAAA,EAAAwC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACvHpE,OAAA;QAAA0B,QAAA,EAAAwC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAENpE,OAAA;QAAQiE,SAAS,EAAC,WAAW;QAACQ,OAAO,EAAErD,UAAW;QAAA4C,QAAA,EAAC;MAAM;QAAAtC,QAAA,EAAAwC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAClEpE,OAAA;QAAA0B,QAAA,EAAAwC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACNpE,OAAA;QAAA0B,QAAA,EAAAwC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAA1C,QAAA,EAAAwC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAELjE,WAAW,iBACVH,OAAA;MAAAgE,QAAA,eACEhE,OAAA;QAAM0E,EAAE,EAAC,YAAY;QAACC,MAAM,EAAC,SAAS;QAACpC,MAAM,EAAC,MAAM;QAACqC,OAAO,EAAC,qBAAqB;QAAAZ,QAAA,eAEhFhE,OAAA;UAAAgE,QAAA,eACAhE,OAAA;YAAAgE,QAAA,eACEhE,OAAA;cAAAgE,QAAA,eACEhE,OAAA;gBAAAgE,QAAA,gBACAhE,OAAA;kBAAOiE,SAAS,EAAC,MAAM;kBAACY,OAAO,EAAC,KAAK;kBAAAb,QAAA,eAAChE,OAAA;oBAAAgE,QAAA,EAAG;kBAAuB;oBAAAtC,QAAA,EAAAwC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAG;gBAAC;kBAAA1C,QAAA,EAAAwC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,eAC1EpE,OAAA;kBAAO8E,IAAI,EAAC,EAAE;kBAACJ,EAAE,EAAC,KAAK;kBAACK,IAAI,EAAC,KAAK;kBAACC,QAAQ;gBAAA;kBAAAtD,QAAA,EAAAwC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAC,CAAC,eAC7CpE,OAAA;kBAAOiE,SAAS,EAAC,MAAM;kBAACY,OAAO,EAAC,UAAU;kBAAAb,QAAA,eAAChE,OAAA;oBAAAgE,QAAA,EAAG;kBAAsB;oBAAAtC,QAAA,EAAAwC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAG;gBAAC;kBAAA1C,QAAA,EAAAwC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,eAChFpE,OAAA;kBAAO8E,IAAI,EAAC,MAAM;kBAACJ,EAAE,EAAC,UAAU;kBAACK,IAAI,EAAC,UAAU;kBAACC,QAAQ;gBAAA;kBAAAtD,QAAA,EAAAwC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAC,CAAC,eAC3DpE,OAAA;kBAAA0B,QAAA,EAAAwC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eACLpE,OAAA;kBAAOiE,SAAS,EAAC,MAAM;kBAACY,OAAO,EAAC,UAAU;kBAAAb,QAAA,eAAChE,OAAA;oBAAAgE,QAAA,EAAG;kBAAsB;oBAAAtC,QAAA,EAAAwC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAG;gBAAC;kBAAA1C,QAAA,EAAAwC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,eAChFpE,OAAA;kBAAQ0E,EAAE,EAAC,UAAU;kBAACK,IAAI,EAAC,UAAU;kBAACC,QAAQ;kBAACxD,KAAK,EAAEjB,gBAAiB;kBAAE0E,QAAQ,EAAE5D,oBAAqB;kBAAA2C,QAAA,EACnGf,QAAQ,CAACiC,GAAG,CAAC,CAACJ,IAAI,EAAEK,KAAK,kBAC1BnF,OAAA;oBAAoBwB,KAAK,EAAEsD,IAAK;oBAAAd,QAAA,EAC/Bc;kBAAI,GADQK,KAAK;oBAAAzD,QAAA,EAAAwC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAEV,CAAE;gBAAC;kBAAA1C,QAAA,EAAAwC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACP,CAAC,eAETpE,OAAA;kBAAQiE,SAAS,EAAC,MAAM;kBAACY,OAAO,EAAC,YAAY;kBAAAb,QAAA,eAAChE,OAAA;oBAAAgE,QAAA,EAAG;kBAAwB;oBAAAtC,QAAA,EAAAwC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAG;gBAAC;kBAAA1C,QAAA,EAAAwC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,eACrFpE,OAAA;kBAAQ8E,IAAI,EAAC,MAAM;kBAACJ,EAAE,EAAC,YAAY;kBAACK,IAAI,EAAC,YAAY;kBAACK,MAAM,EAAC;gBAA6D;kBAAA1D,QAAA,EAAAwC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAC,CAAC,eAC5HpE,OAAA;kBAAGqE,KAAK,EAAE;oBAACG,UAAU,EAAC,OAAO;oBAACD,SAAS,EAAC;kBAAM,CAAE;kBAAAP,QAAA,eAAChE,OAAA;oBAAAgE,QAAA,EAAG;kBAAmC;oBAAAtC,QAAA,EAAAwC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAG;gBAAC;kBAAA1C,QAAA,EAAAwC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAG,CAAC,eAC/FpE,OAAA;kBAAQiE,SAAS,EAAC,WAAW;kBAACa,IAAI,EAAC,QAAQ;kBAACL,OAAO,EAAEhD,UAAW;kBAAAuC,QAAA,EAAC;gBAAM;kBAAAtC,QAAA,EAAAwC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,eAChFpE,OAAA;kBAAA0B,QAAA,EAAAwC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eACLpE,OAAA;kBAAA0B,QAAA,EAAAwC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC;cAAA;gBAAA1C,QAAA,EAAAwC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH;YAAC;cAAA1C,QAAA,EAAAwC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH;UAAC;YAAA1C,QAAA,EAAAwC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA;QAAC;UAAA1C,QAAA,EAAAwC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAA1C,QAAA,EAAAwC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF;IAAC;MAAA1C,QAAA,EAAAwC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CACN,eAEDpE,OAAA;MAAAgE,QAAA,eAEEhE,OAAA,CAACF,SAAS;QAACO,KAAK,EAAEA,KAAM;QAACgF,UAAU,EAAEzC;MAAS;QAAAlB,QAAA,EAAAwC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAA1C,QAAA,EAAAwC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC;EAAA;IAAA1C,QAAA,EAAAwC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEC,CAAC;AAEd,CAAC;AAAAlE,EAAA,CApQKD,UAAU;AAAAqF,EAAA,GAAVrF,UAAU;AAsQhB,eAAeA,UAAU;AAAC,IAAAqF,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}