{"ast":null,"code":"var _jsxFileName = \"/Users/vinnu/Desktop/Nyaaya/NYAAYA/eportal/src/pages/Litigant/CaseDocinfo.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport Filetable from '../../Components/Filetable';\nimport \"./CaseDocinfo.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CaseDocinfo = () => {\n  _s();\n  var _location$state;\n  const location = useLocation();\n  const cnrdata = (location === null || location === void 0 ? void 0 : (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.CnrNumber) || '';\n  const [files, setFiles] = useState([]);\n  useEffect(() => {\n    const fetchFiles = async () => {\n      try {\n        const response = await fetch(`http://localhost:3001/files?cnr=${cnrdata}`);\n        const filesData = await response.json();\n        setFiles(filesData);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchFiles();\n  }, [cnrdata]);\n  const viewFile = async filename => {\n    try {\n      const response = await fetch(`http://localhost:3001/files/${encodeURIComponent(filename)}`);\n      if (response.ok) {\n        const fileContentBase64 = await response.text();\n\n        // Determine the file type based on filename extension\n        const fileType = filename.split('.').pop().toLowerCase();\n        if (fileType === 'jpg' || fileType === 'jpeg' || fileType === 'png' || fileType === 'gif') {\n          // Display the image using a data URL\n          const imageSrc = `data:image/${fileType};base64,${fileContentBase64}`;\n\n          // Open a new window and display the image\n          const newTab = window.open();\n          newTab.document.write(`\n            <!DOCTYPE html>\n            <html>\n              <head>\n                <title>${filename}</title>\n              </head>\n              <body>\n                <img src=\"${imageSrc}\" alt=\"${filename}\" />\n              </body>\n            </html>\n          `);\n        } else if (fileType === 'mp4' || fileType === 'webm' || fileType === 'ogg') {\n          // Display the video using a data URL\n          const videoSrc = `data:video/${fileType};base64,${fileContentBase64}`;\n\n          // Open a new window and display the video\n          const newTab = window.open();\n          newTab.document.write(`\n            <!DOCTYPE html>\n            <html>\n              <head>\n                <title>${filename}</title>\n              </head>\n              <body>\n                <video width=\"1500\" height=\"700\" controls>\n                  <source src=\"${videoSrc}\" type=\"video/${fileType}\">\n                  Your browser does not support the video tag.\n                </video>\n              </body>\n            </html>\n          `);\n        } else if (fileType === 'pdf') {\n          // Display the PDF using <embed> element\n          const pdfSrc = `data:application/pdf;base64,${fileContentBase64}`;\n\n          // Open a new window and display the PDF\n          const newTab = window.open();\n          newTab.document.write(`\n            <!DOCTYPE html>\n            <html>\n              <head>\n                <title>${filename}</title>\n              </head>\n              <body>\n                <embed src=\"${pdfSrc}\" type=\"application/pdf\" width=\"100%\" height=\"700px\">\n              </body>\n            </html>\n          `);\n        } else if (fileType === 'txt') {\n          const decodedContent = atob(fileContentBase64);\n          const newTab = window.open();\n          newTab.document.write(`\n            <!DOCTYPE html>\n            <html>\n              <head>\n                <title>${filename}</title>\n              </head>\n              <body>\n                <pre>${decodedContent}</pre>\n              </body>\n            </html>\n          `);\n        } else if (fileType === 'mp3' || fileType === 'wav' || fileType === 'ogg') {\n          // Display the audio using a data URL\n          const audioSrc = `data:audio/${fileType};base64,${fileContentBase64}`;\n          // Open a new window and display the audio\n          const newTab = window.open();\n          newTab.document.write(`\n            <!DOCTYPE html>\n            <html>\n              <head>\n                <title>${filename}</title>\n                <style>\n          body {\n            display: flex;align-items: center;justify-content: center;height: 100vh;\n          }\n        </style>\n              </head>\n              <body>\n                <audio controls>\n                  <source src=\"${audioSrc}\" type=\"audio/${fileType}\">\n                  Your browser does not support the audio tag.\n                </audio>\n              </body>\n            </html>\n          `);\n        } else {\n          console.error('Unsupported file type:', fileType);\n          alert('Unsupported file type');\n        }\n      } else {\n        console.error('Error fetching file content:', response.status);\n        alert('Error fetching file content');\n      }\n    } catch (error) {\n      console.error(error);\n      alert('Error fetching file content');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"doctitle\",\n        children: \"Case Documents\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"doctable\",\n      children: /*#__PURE__*/_jsxDEV(Filetable, {\n        files: files,\n        onViewFile: viewFile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/litigantaccount\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          marginLeft: \"30px\",\n          marginTop: \"20px\"\n        },\n        children: \"back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n};\n_s(CaseDocinfo, \"hITk7H5tJToHB3OpNZL+tXOvb+Q=\", false, function () {\n  return [useLocation];\n});\n_c = CaseDocinfo;\nexport default CaseDocinfo;\nvar _c;\n$RefreshReg$(_c, \"CaseDocinfo\");","map":{"version":3,"names":["React","useEffect","useState","Link","useLocation","Filetable","jsxDEV","_jsxDEV","CaseDocinfo","_s","_location$state","location","cnrdata","state","CnrNumber","files","setFiles","fetchFiles","response","fetch","filesData","json","error","console","viewFile","filename","encodeURIComponent","ok","fileContentBase64","text","fileType","split","pop","toLowerCase","imageSrc","newTab","window","open","document","write","videoSrc","pdfSrc","decodedContent","atob","audioSrc","alert","status","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onViewFile","to","style","marginLeft","marginTop","_c","$RefreshReg$"],"sources":["/Users/vinnu/Desktop/Nyaaya/NYAAYA/eportal/src/pages/Litigant/CaseDocinfo.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport Filetable from '../../Components/Filetable';\nimport \"./CaseDocinfo.css\";\nconst CaseDocinfo = () => {\n  const location = useLocation();\n  const cnrdata = location?.state?.CnrNumber || '';\n  const [files, setFiles] = useState([]);\n    useEffect(() => {\n        const fetchFiles = async () => {\n          try {\n            const response = await fetch(`http://localhost:3001/files?cnr=${cnrdata}`);\n            const filesData = await response.json();\n            setFiles(filesData);\n          } catch (error) {\n            console.error(error);\n          }\n        };\n        fetchFiles();\n  }, [cnrdata]);\n  const viewFile = async (filename) => {\n    try {\n      const response = await fetch(`http://localhost:3001/files/${encodeURIComponent(filename)}`);\n      if (response.ok) {\n        const fileContentBase64 = await response.text();\n  \n        // Determine the file type based on filename extension\n        const fileType = filename.split('.').pop().toLowerCase();\n  \n        if (fileType === 'jpg' || fileType === 'jpeg' || fileType === 'png' || fileType === 'gif') {\n          // Display the image using a data URL\n          const imageSrc = `data:image/${fileType};base64,${fileContentBase64}`;\n  \n          // Open a new window and display the image\n          const newTab = window.open();\n          newTab.document.write(`\n            <!DOCTYPE html>\n            <html>\n              <head>\n                <title>${filename}</title>\n              </head>\n              <body>\n                <img src=\"${imageSrc}\" alt=\"${filename}\" />\n              </body>\n            </html>\n          `);\n        } else if (fileType === 'mp4' || fileType === 'webm' || fileType === 'ogg') {\n          // Display the video using a data URL\n          const videoSrc = `data:video/${fileType};base64,${fileContentBase64}`;\n  \n          // Open a new window and display the video\n          const newTab = window.open();\n          newTab.document.write(`\n            <!DOCTYPE html>\n            <html>\n              <head>\n                <title>${filename}</title>\n              </head>\n              <body>\n                <video width=\"1500\" height=\"700\" controls>\n                  <source src=\"${videoSrc}\" type=\"video/${fileType}\">\n                  Your browser does not support the video tag.\n                </video>\n              </body>\n            </html>\n          `);\n        } else if (fileType === 'pdf') {\n          // Display the PDF using <embed> element\n          const pdfSrc = `data:application/pdf;base64,${fileContentBase64}`;\n  \n          // Open a new window and display the PDF\n          const newTab = window.open();\n          newTab.document.write(`\n            <!DOCTYPE html>\n            <html>\n              <head>\n                <title>${filename}</title>\n              </head>\n              <body>\n                <embed src=\"${pdfSrc}\" type=\"application/pdf\" width=\"100%\" height=\"700px\">\n              </body>\n            </html>\n          `);\n        } else if (fileType === 'txt') {\n    \n          const decodedContent = atob(fileContentBase64);\n          const newTab = window.open();\n          newTab.document.write(`\n            <!DOCTYPE html>\n            <html>\n              <head>\n                <title>${filename}</title>\n              </head>\n              <body>\n                <pre>${decodedContent}</pre>\n              </body>\n            </html>\n          `);\n        } \n        else if (fileType === 'mp3' || fileType === 'wav' || fileType === 'ogg') {\n          // Display the audio using a data URL\n          const audioSrc = `data:audio/${fileType};base64,${fileContentBase64}`;\n          // Open a new window and display the audio\n          const newTab = window.open();\n          newTab.document.write(`\n            <!DOCTYPE html>\n            <html>\n              <head>\n                <title>${filename}</title>\n                <style>\n          body {\n            display: flex;align-items: center;justify-content: center;height: 100vh;\n          }\n        </style>\n              </head>\n              <body>\n                <audio controls>\n                  <source src=\"${audioSrc}\" type=\"audio/${fileType}\">\n                  Your browser does not support the audio tag.\n                </audio>\n              </body>\n            </html>\n          `);\n        }else {\n          console.error('Unsupported file type:', fileType);\n          alert('Unsupported file type');\n        }\n      } else {\n        console.error('Error fetching file content:', response.status);\n        alert('Error fetching file content');\n      }\n    } catch (error) {\n      console.error(error);\n      alert('Error fetching file content');\n    }\n  };\n\n  return (\n    <section>\n    <div>\n        <h1 className='doctitle'>Case Documents</h1>\n        <br />\n      </div>\n    <div className='doctable'>\n        <Filetable files={files} onViewFile={viewFile} />\n      </div>\n      <Link to =\"/litigantaccount\">\n      <button style={{marginLeft:\"30px\", marginTop:\"20px\"}}>\n        back\n      </button>\n      </Link>\n      </section>\n  )\n}\n\nexport default CaseDocinfo"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}